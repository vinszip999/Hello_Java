package javaStudy;

public class Content2 {

	public static void main(String[] args) {
//		<변수>
//		변수란, 값(Data)을 저장할 수 있는 메모리의 공간을 의미한다.
//		값(Data)이 변할 수 있는 수
//
//		>변수의 선언
//		- 타입 변수이름;
//		  - int count; ( 정수 값을 담을 수 있는 count라는 이름의 변수를 선언)
//		  - double average; ( 실수 값을 담을 수 있는 average 라는 변수를 선언)
//
//		- 명명규칙
//		  - 변수의 이름을 정할 때 자바 언어에서 정해놓은 규칙
//
//		- 식별자 (identifier)는 클래스, 메소드, 변수 등 다양한 대상에 대해 이름이 붙여지는 경우. 그 이름을 뜻 함
//
//		>java 식별자 명명 규칙
//		- 하나 이상의 글자로 이루어져야 함
//		- 첫 번째 글자는 문자 이거나 '$', '_'이어야 함
//		- 두번재 이후의 글자는 숫자, 문자, '$', '_'이어야 함
//		- '$', '_' 이외의 특수문자 사용 불가능
//		- 길이 제한이 없음
//		- 키워드는 식별자로 사용할 수 없음
//		- 상수 값을 표현하는 단어 true, false, null은 식별자로 사용할 수 없음
//
//		>변수 명명 관례
//		- 첫 번째 문자가 소문자인 명사로 정함
//		- 여러 단어로 구성된 이름의 경우 두번째 단어부터 첫글자를 대문자로 함
//		- '_'을 쓰지 않음
//		  - 규칙은 반드시 지켜야 한다. 지키지 않으면 컴파일시 에러가 발생함.
//		  - 관례는 지키지 않아도 컴파일에러가 발생하지는 않지만, 약속이기 때문에 지켜주는것이 좋다.
//
//		>변수의 사용
//		- 변수명 = 값;
//		  - count = 10; (count 라는 int형 변수에 정수값 10을 담습니다.)
//		  - count = 20; (count 라는 int형 변수에 정수값 20을 담습니다. 원래 담겨있던 10은 없어집니다. 변수는 값이 얼마든지 변할 수 있습니다.)
//		  - average = 11.1 (average라는 double형 변수에 실수 값 11.1 을 담습니다. )

		  
//		<상수>
//		상수도 변수처럼 데이터를 담을 수 있는 메모리 공간을 의미한다. 
//		그러나, 변수와 다르게 상수는 한번 저장한 데이터 값을 변경할 수 없다.
//
//		*상수란 수식에서 변하지 않는 값을 의미한다.
//
//		상수를 선언할 땐 앞에 final을 붙여준다.
//
//		상수는 대문자의 명명규칙을 사용한다.
//
//		>상수의 선언
//		- final 상수타입 상수명;
//		  - final int J;
//
//		>상수의 사용
//		- 상수명 = 값;
//		  - J = 10; (J에는 값을 담을 수 있는 기회가 단 한 번만 허락됨)
//
//		>상수 명명 관례
//		- 대문자로만 구성된 명사로 정함
//		- 여러 단어로 구성된 이름의 경우 단어 사이에 '_'을 써서 구분함.
//
//		>상수를 사용해야 하는 경우
//		- 값이 변하면 위험한 경우에 상수를 사용
//		- 값만 봤을때 무엇을 의미하는지 쉽게 파악할 수 없는 값에도 값 자체를 사용하기 보다는 상수를 사용
		
		
//		<기본형 타입>
//		기본형 타입은 가장 기본이 되는 데이터 타입으로써 정수형, 실수형, 문자형, 논리형을 의미한다.
//
//		>논리형
//		- 논리형은 크기가 1byte이고 true와 false 중에 한 가지 값을 가질 수 있다.
//
//		>문자형
//		- 문자형은 char로 2byte크기를 가집니다. 문자는 작은따옴표를 이용하여 한 글자를 표현할 수 있다.
//
//		>정수형
//		- 정수형은 정수를 표현하는 데이터 타입인데 표현할 수 있는 정수의 범위에 따라서 다양하게 제공된다.
//		- 정수형에서 가장 자주 사용하는 int는 4바이트이다.
//		- long형은 8byte크기를 가진다. int 보다 더 큰 범위의 정수를 표현하고 싶을때 사용한다.
//
//		>실수형
//		- 실수형은 float과 double형이 있다.
//		- float은 4바이트, double은 8바이트로 double은 float보다 더 큰 범위의 실수를 표현할 수 있다.
//
//		>리터럴
//		- 컴퓨터 과학 분야에서 리터럴이란, 소스 코드의 고정된 값을 대표하는 용어다.
//		- 리터럴은 일종의 값이다. true, false, 10, 11.1, a 등 이런 특정한 값 자체를 리터럴이라고 한다. 
//
//		>기본형 타입의 사용 방법
//		- boolean isFun = true;
//		- char c ='f';
//		- int x = 59;
//		- long big = 3456789L; (값을 적을때는 뒤에 소문자 l이나 대문자 L을 적어야 한다.)
//		- float f = 32.5f (float에 값을 대입할 때는 실수 뒤에 소문자 f나 대문자 F를 붙여야 한다.)
//		- double d = 23.34;
		
		
	} // end of main

} // end of class
